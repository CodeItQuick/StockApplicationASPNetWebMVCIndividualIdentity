@model StockApplicationASPNetWebMVCIndividualIdentity.Adapters.Controllers.Home.IndexResponseModel<StockApplicationASPNetWebMVCIndividualIdentity.Application.DBService.StocksAdapter>

<div class="text-center">
    <h1 class="display-4">W5000 Stock Index</h1>

    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    Page: @(Model.PageIndex + 1) &nbsp;
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
    Total Pages: @Model.NumPages
    <div style="display: flex;">
        @foreach (var letter in new string[]
        {
            "A",
            "B",
            "C",
            "D",
            "E",
            "F",
            "G",
            "H",
            "I",
            "J",
            "K",
            "L",
            "M",
            "N",
            "O",
            "P",
            "Q",
            "R",
            "S",
            "T",
            "U",
            "V",
            "W",
            "X",
            "Y",
            "Z",
        }
            )
        {
            <form action="Index" method="POST">
                <button type="submit"
                        asp-controller="Home"
                        asp-action="FindPage"
                        asp-route-letter="@letter"
                        class="btn btn-default ">
                    @letter
                </button>
            </form>
        }
    </div>
</div>

<table class="table">
    <thead>
    <tr>
        <th scope="col">Symbol</th>
        <th scope="col">Pb Ratio</th>
        <th scope="col">Pe Ratio</th>
        <th scope="col">Eps</th>
        <th scope="col">Roe Average</th>
        <th scope="col">Div Yield</th>
        <th scope="col">Predicted Market Cap</th>
        <th scope="col">Market Cap</th>
    </tr>
    </thead>
    <tbody>

    @foreach (var item in Model.StockInfoDatums.GetRange(0, 19))
    {
        <tr>
            <th scope="row">@item.Ticker</th>
            <td>@item.stockAttribute?["PbRatio"]</td>
            <td>@item.stockAttribute?["PeRatio"]</td>
            <td>@item.stockAttribute?["Eps"]</td>
            <td>@item.stockAttribute?["AvgRoe"]</td>
            <td>@item.stockAttribute?["DivYield"]</td>
            <td>@(item.stockAttribute != null && item.stockAttribute.ContainsKey("PredictedIntrinsicValue") ? item.stockAttribute?["PredictedIntrinsicValue"].ToString("#,##0") : "")</td>
            <td>@item.stockAttribute?["MarketCap"].ToString("#,##0")</td>
            <td>
                <form method="POST">
                    <input type="submit"
                           asp-action="AddShortlist"
                           asp-controller="Home"
                           asp-route-ticker="@item.Ticker"
                           asp-route-stockid="@item.Id"
                           asp-route-index="@Model.PageIndex"
                           value="Add To Shortlist"/>
                </form>
            </td>
            <td>
                <form method="post">
                    <input
                        type="submit"
                        asp-controller="Home"
                        asp-action="RetrieveCashFlowStatementDataIndex"
                        asp-route-ticker="@item.Ticker"
                        asp-route-index="@Model.PageIndex"
                        class="btn btn-success"
                        value="Retrieve Cash Flow Statements"/>
                </form>
            </td>
        </tr>
    }
    </tbody>
</table>